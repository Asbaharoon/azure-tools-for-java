#########################Below properties came from azure-toolkit-libs##########################
service.refresh=refresh Azure Module({0})
resource.refresh=refresh Azure Resource({0})

group.create_if_not_exist=check resource group ({0})

mysql.create_server=create MySQL server({0})
mysql.start_server=start MySQL server({0})
mysql.stop_server=stop MySQL server({0})
mysql.restart_server=restart MySQL server({0})
mysql.delete_server=delete MySQL server({0})

postgre.create_server=create Postgre server({0})
postgre.restart_server=restart Postgre server({0})
postgre.delete_server=delete Postgre server({0})
postgre.list.subscription=list PostgreSQL servers of subscription({0})
postgre.get_server.server|rg=get PostgreSQL server({0}) in resource group({1})

sqlserver.create_server=create SQL server({0})
sqlserver.delete_server=delete SQL server({0})

storage.create_account=creating storage account({0})
storage.delete_account=delete storage account({0})

redis.create=create redis cache({0})
redis.delete=delete redis cache({0})
redis.list.subscription|selected=list Redis Caches of selected subscriptions
redis.check_name=check name availability for redis cahe({0})
redis.get.id=get Redis cache({0})
redis.get_jedis_pool=get redis client pool

springcloud.load_cluster=load Spring Cloud Service({0}) from Azure
springcloud.get_cluster.name=get Spring Cloud Service({0}) by name
springcloud.list_cluster.subscription=list Spring Cloud services of subscription({0})
springcloud.list_cluster.subscription|selected=list Spring Cloud services of selected subscriptions
springcloud.refresh_app=refresh status of Spring Cloud app deployment({0}) from Azure
springcloud.get_app.name=get Spring Cloud app({0}) from Azure
springcloud.list_app.cluster=list Spring Cloud apps of Spring Cloud Service({0})
springcloud.load_app=load Spring Cloud app({0}) from Azure
springcloud.create_app=create Spring Cloud app({0})
springcloud.update_app=update Spring Cloud app({0})
springcloud.start_app=start Spring Cloud app({0})
springcloud.stop_app=stop Spring Cloud app({0})
springcloud.restart_app=restart Spring Cloud app({0})
springcloud.remove_app=remove Spring Cloud app({0})
springcloud.create_update_app=create or update Spring Cloud app({0}) from config
springcloud.load_deployment=load deployment({0}) of Spring Cloud app({1}) from Azure
springcloud.start_deployment=start deployment({0}) of Spring Cloud app({1})
springcloud.stop_deployment=stop deployment({0}) of Spring Cloud app({1})
springcloud.restart_deployment=restart deployment({0}) of Spring Cloud app({1})
springcloud.scale_deployment=scale deployment({0}) of Spring Cloud app({1})
springcloud.update_deployment=update deployment({0}) of Spring Cloud app({1})
springcloud.create_deployment=create deployment({0}) of Spring Cloud app({1})
springcloud.get_deployment=get deployment({0}) of Spring Cloud app({1}) from Azure
springcloud.list_deployment.app=list deployments of Spring Cloud app({0})
springcloud.wait_until_deployment_ready=wait deployment({0}) of Spring Cloud app({1}) to be ready
springcloud.get_client.subscription=get Spring Cloud rest client of subscription({0})

appservice.get_plan.name|rg|sid=get Azure App Service plan({0}) in resource group({1})
appservice.list_plan.subscription=list Azure App Service plans of subscription({0})
appservice.list_plan.rg=list Azure App Service plans of resource group({0})
appservice.get_deployment.id=get Azure App Service deployment slot by id({0})
appservice.get_client.subscription=get Azure App Service rest client of subscription({0})
appservice.create_update_plan=create or update Azure App Service plan ({0}) from config
appservice.check_name=check name availability for ({0})

functionapp.get.name|rg|sid=get Azure Functions app({0}) in resource group{(1)}
functionapp.list.subscription=list Azure Functions apps of subscription({0})
functionapp.deploy.mojo=deploy to Azure Function App with resource creation or updating

webapp.create_update=create or update Azure Web App ({0}) from config
webapp.deploy=deploy artifacts to Azure Web App ({0})
webapp.get.id=get Azure Web App({0})
webapp.get.name|rg|sid=get Azure Web App({0}) in resource group({1})
webapp.list.subscription=list Azure Web Apps of subscription({0})
webapp.list_runtime.os|version=list available Azure Web App runtimes with os({0}) and java version({1})
webapp.create=create Azure Web App ({0}) from config
webapp.update=update Azure Web App ({0}) from config
#########################Above properties came from azure-toolkit-libs##########################

account.sign_in=sign in to Azure
account.sign_out=sign out from Azure
account.load_auth_setting=load auth settings from file system
account.persist_auth_setting=persist auth settings to file system
account.update_auth_setting=update auth settings
account.get_subscription_detail.selected=load details of all selected subscriptions
account.get_subscription_detail=load details of subscription({0})
account.get_subscription_details=get details of all cached subscriptions
account.list_subscriptions.selected=list selected subscriptions
account.list_subscriptions.tenant|authorized=load subscriptions from authorized tenants
account.list_subscriptions.tenant=get all subscriptions of tenant({0})
account.load_all_subscriptions=load all available subscriptions from Azure
account.load_subscription_cache=reload subscriptions cache from file system
account.persist_subscription=persist subscriptions cache to file system
account.refresh_subscriptions=reload subscriptions
account.select_subscription=select one/more subscriptions
account.auth_tenant=authenticate tenant({0})
account.list_tenants.authorized=get all authorized tenants
account.authorize=authorizing...

ai.create.rg=create application insight({0}) in resource group({1})
ai.list.subscription=list application insights of subscription({0})

appservice.download_file=download file({0}) to local
appservice.list_files=reload log/files of web/function app({0})
appservice.open_file=open file({0}) in editor
appservice.refresh_file=refresh file({0})
appservice.save_file=save file({0}) to azure
appservice.list_flight_recorders.app=list flight recorders of app({0})
appservice.profile_flight_recorder=profile flight recorder
appservice.close_log_stream=close streaming log of app({0})
appservice.open_log_stream=open streaming log of app({0})
appservice.start_log_stream=start streaming log of app({0})
appservice.list_plans.subscription|region|os=load app service plans of subscription({0})/region({1})/os({2})
appservice.list_regions.subscription|tier=get available regions with pricing tier({0}) of subscription({1})

arm.delete_deployment=delete azure resource(deployment:{0})
arm.create_deployment=create azure resource deployment {0}
arm.list_deployments.subscription|rg=list all deployments of resource group({0}) in subscription({1})
arm.list_deployments.subscription|selected=list all deployments of selected subscriptions
arm.list_deployments.subscription=list all deployments of subscription({0})
arm.update_deployment=update azure resource(deployment {0})
arm.delete_resource_group=delete resource group({0})
arm.get_resource_group.subscription=load details of resource group({0}) in subscription({1})
arm.list_resource_groups.subscription|selected=list resource groups of selected subscription
arm.list_resource_groups.subscription=list resource groups of subscription({0})
arm.open_portal.rg=open configuration page of resource group({0}) in portal

blob.create=create blob container({0})
blob.delete=delete blob({0})
blob.download=download blob into file({0}) from container({1})
blob.list=load blobs of container({0})
blob.upload=upload blob file({0}) to blob container({1})

common.list_tiers=list all available pricing tiers
common.load_whatsnew=load what's new document
common.open_portal=open setting page of resource({0}) in portal
common.show_properties=show properties of deployment({0})
common.validate_project=check if project({0}) is a valid function project
common.get_artifact_file=get target file of artifact({0})
common.get_artifact_module=get module from artifact({0})
common.list_artifacts.project=list supported artifacts of project({0})
common.zip_artifact_files=archive artifacts into ({0}) for deployment
common.load_combobox_items=load/refresh {0} items in combo box
common.initialize_explorer=initialize Azure explorer
common.open_explorer=open Azure explorer
common.refresh_explorer=refresh Azure explorer
common.load_explorer_node_content=load content of node({0})
common.list_regions.subscription=load available regions of subscription({0})
resource.connect=connect to resource ({0})
resource.create=create app under ({0})
resource.delete=delete ({0})
resource.deploy=deploy artifacts to ({0})
resource.open_portal_url=open ({0}) in Azure Portal
resource.restart=restart ({0})
resource.show_properties=show properties view of ({0})
resource.start=start ({0})
resource.stop=stop ({0})
common.create_rest_client=create rest client for general Azure services in subscription({0})

aad.select_subscription=select subscription
aad.create_application=creating Azure AD application
aad.register_application=show ui to register a new Azure AD application
aad.show_application_template=show code templates for newly create Azure AD application
aad.show_application_templates=show code templates for Azure AD applications
connector.add_connection=add new Azure resource connector
connector.edit_connection=edit Azure resource connector
connector.initialize_explorer=initialize Azure Resource Connector tool window
connector.refresh_connection.explorer=refresh to reload nodes of Azure Resource Connector explorer
connector.remove_connection=remove Azure resource connector
connector.show_properties.explorer=show properties of the resource of Azure Resource Connector
connector.prepare_before_run=prepare before run configuration

container.open_portal=open registered container({0}) in portal
container.show_properties=show properties of registered container({0})

docker.add_docker_support.configuration=add docker support within run/debug configuration
docker.create_from_private_image=create web app({0}) in subscription({1}) with private registry image({2})
docker.deploy_image.state=deploy docker image to web app
docker.ping=try connecting docker({0})
docker.start.configuration=start docker based web app within run/debug configuration
docker.build_image=build docker image({0}) in directory({1}) on docker host({2})
docker.pull_image=pull docker image({0})
docker.push_image.configuration=push docker image to web app within run/debug configuration
docker.push_image=push docker image({0}) to registry({1})
docker.update_image=update docker image of web app({0}) to ({1})

function.clean_staging_folder=clean up staging folder({0})
function.complete_deployment=complete the deployment of function({0}) and refresh Azure Explorer
function.complete_local_run=complete running function({0})
function.copy_settings=copy local settings({0}) to staging folder({1})
function.create_detail=create function app ({0})...
function.create=create function app
function.delete=delete function app({0})
function.deploy.configuration=deploy function app within run/debug configuration
function.deploy.state=deploy function app
function.get_version=get version of function({0})
function.import_app_settings=import app settings
function.launch_debugger=launch debugger for function
function.list.detail|java|subscription|selected=list all java function apps with details in selected subscription(s)
function.list_function_methods=list all function methods in module({0}) by annotation
function.list_function_modules=list all function modules in project({0})
function.load_setting=load app settings of function app({0})
function.open_creation_dialog=open function app creation dialog
function.open_portal=open function({0}) in portal
function.prepare_staging_folder_detail=prepare staging folder({0}) for function({1})
function.prepare_staging_folder=prepare staging folder for function method
function.refresh=refresh functions in function app
function.reload_all=reload function apps
function.restart=restart function app({0})
function.run.configuration=run function app locally within run/debug configuration
function.run.state=run function app locally
function.show_properties=show properties of function({0})
function.start=start function app({0})
function.stop=stop function app({0})
function.validate_jre=validate version of local jre
function.validate_runtime=validate runtime of function({0})
function.run_cli=run function CLI command from staging folder({0})
function.trigger.detail=trigger function({0})
function.start_http_trigger=start http trigger for function({0})
function.trigger=trigger function app

mysql.connect_server=connect to Azure MySQL server({0})
mysql.open_portal=open configuration page of MySQL server({0}) in portal
mysql.show_properties=show properties of MySQL server({0})
mysql.update_password=update password of MySQL instance
mysql.create_server.server|subscription=create Azure Database for MySQL({0}) in subscription({1})
mysql.list_versions.supported=list Azure MySQL-supported versions

postgre.connect_server.server=connect to Azure PostgreSQL server({0})
postgre.update_password=update password of PostgreSQL instance
postgre.open_by_database_tools=open PostgreSQL Server({0}) by Database Tools plugin

redis.open_explorer=open redis explorer of redis instance({0})
redis.open_portal=open configuration page of redis instance({0}) in portal
redis.show_properties=show properties of redis instance({0})

sdk.load_meta_data.java=load Azure SDK meta data
sdk.load_meta_data.spring=load Azure SpringBoot SDK meta data
sdk.load_meta_data.whitelist=load Azure SDK allow list meta data
sdk.load_meta_data=load Azure SDK meta data from github
sdk.warn_deprecated_libs=warn on deprecated libs
sdk.open_reference_book=open Azure SDK Reference Book
sdk.show_sdk_feature_details=show details of feature({0}) in Azure SDK list

springcloud.deploy=deploy spring cloud application
springcloud.update_dependency=update Azure Spring Cloud dependencies for project({0})
springcloud.open_public_url.app=open public endpoint of Azure Spring Cloud app({0}) in browser
springcloud.open_test_url.app=open test endpoint of Azure Spring Cloud app({0}) in browser
springcloud.show_properties.app=show properties of spring cloud app({0})
springcloud.open_stream_log.app=open log streaming of Azure Spring Cloud app({0})
springcloud.close_log_stream=close stream log for Spring Cloud app/instance({0})
springcloud.open_log_stream=open stream log for Spring Cloud app/instance({0})
springcloud.start_log_stream=start stream log for Spring Cloud app/instance({0})

sqlserver.open_by_database_tools=open SQL Server({0}) by Database Tools plugin.
sqlserver.open_portal.server=open configuration page of SQL Server({0}) in portal
sqlserver.show_properties.server=show properties of SQL Server({0})

storage.open_portal.account=open configuration page of storage account({0}) in portal
storage.open_storage_explorer=open Storage Explorer of storage account({0})

vm.create=create virtual machine({0})
vm.delete=delete virtual machine({0})
vm.list_availability_sets=list all available availability sets
vm.list_public_ips=load all available public ip addresses
vm.list_security_groups=list all available network security groups
vm.list_sizes.region=list all VM sizes in region({0})
vm.list_storage_accounts=list all available storage accounts
vm.list_virtual_networks=load all available virtual networks
vm.open_portal=open configuration page of virtual machine({0}) in portal
vm.restart=restart virtual machine({0})
vm.start=start virtual machine({0})
vm.stop=stop virtual machine({0})
vm.list_images=load images
vm.list_offers=load offers in publisher({0})
vm.list_publishers=load publishers
vm.list_skus=load skus in offer({0})
vm.add_ssh_config=Add SSH config for ({0})
vm.open_ssh_config_dialog=Open "SSH Configurations" Dialog

webapp.complete_deployment.state=complete the deployment of web app({0}) and refresh Azure Explorer
webapp.complete_starting.state=update local configuration and open url of web app in local browser
webapp.create_detail=create web app({0})
webapp.delete=delete web app
webapp.deploy_artifact=deploy artifact to web app ({0})
webapp.deploy_module=deploy module({0}) as Azure web app
webapp.init_config=init web app configuration
webapp.open_browser.state=open web app in local browser
webapp.open_creation_dialog=open web app creation dialog
webapp.open_portal=open configuration page of web app({0}) in portal
webapp.refresh=refresh content of web app
webapp.reload=reload web apps in selected subscription(s)
webapp.get_artifact.state=get the artifact to be deployed to web app({0})
webapp.upload_artifact=upload artifact({0}) to app({1})
webapp.create_deployment.state=create deployment slot for web app({0})
webapp.create_deployment=create deployment({0}) for web app({1})
webapp.delete_deployment=delete deployment slot({0}) of web app({1})
webapp.open_portal.deployment=open configuration page of deployment slot({0}) in portal
webapp.refresh_deployment=refresh deployment slot({0}) of web app({1})
webapp.reload_deployment=refresh deployment slots of web app({0})
webapp.restart_deployment=restart deployment slot({0}) of web app({1})
webapp.start_deployment=start deployment slot({0}) of web app({1})
webapp.stop_deployment=stop deployment slot({0}) of web app({1})
webapp.swap_deployment=swap deployment slot({0}) of web app({1}) for production
webapp.update_deployment_settings=update settings of deployment slot({0}) of web app({1})
webapp.connect_ssh=connect to web app ({0})
webapp.open_ssh=Opening SSH - ({0}) session ...
